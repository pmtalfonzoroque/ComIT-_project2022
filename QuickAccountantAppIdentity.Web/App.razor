@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject RoleManager<IdentityRole<int>> _RoleManager

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>


@code  
{
    protected override async Task OnInitializedAsync() /*This is for the page when loaded*/
    {
        await CreateRole("SysAdmin");
        await CreateRole("Customer");
        await CreateRole("BussinessManager");
    }
    

    @*This is a method here in the page*@

     private async Task CreateRole (string roleName)
    {
        var existingRole = await _RoleManager.FindByNameAsync(roleName);

        if (existingRole == null)
        {
            IdentityRole<int> role = new()
                {
                    Name = roleName
                };

            await _RoleManager.CreateAsync(role);
        }
    }

}